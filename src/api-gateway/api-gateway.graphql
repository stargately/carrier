# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type ApiTokens {
  _id: String
  carrierToken: String
  logoUrl: String
  sendgridApiKey: String
}

type EmailMetaTemplate {
  logoUrl: String!
}

type EmailTemplate {
  description: String!
  fromEmail: String
  id: ID!
  mainContent: String
  mainCta: String
  plainTextBody: String
  replyToEmail: String
  secondaryContent: String
  secondaryCta: String
  subject: String
}

# The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
scalar JSONObject
@specifiedBy(
  url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf"
)

type Mutation {
  send(
    email: String!
    idempotencyKey: String
    payload: JSONObject
    templateId: String!
  ): String!
  updateExampleDataPayload(
    exampleDataPayload: JSONObject!
    templateId: ID!
  ): JSONObject
  upsertApiTokens(
    _id: String!
    carrierToken: String
    sendgridApiKey: String
  ): ApiTokens
  upsertEmailTemplate(
    description: String!
    fromEmail: String
    id: String!
    mainContent: String
    mainCta: String
    plainTextBody: String
    replyToEmail: String
    secondaryContent: String
    secondaryCta: String
    subject: String
  ): EmailTemplate
}

type Query {
  apiTokens: ApiTokens!
  emailMetaTemplates(userId: ID!): EmailMetaTemplate!
  emailTemplates: [EmailTemplate!]!
  exampleDataPayload(templateId: ID!): JSONObject

  # is the server healthy?
  health: String!
  renderHtml(payload: JSONObject, templateId: String!): String!
}
